{
    // scope:
    //
    // source.php
    //   blacklist:
    //     comment
    //     constant.other.class
    //     entity
    //     meta.catch
    //     meta.class
    //     meta.function.arguments
    //     meta.function.parameters
    //     meta.use
    //     string
    //     support.class
    //     variable.other
    //     variable.parameter
    //     meta.function.return-type
    // source.php meta.class.php meta.block.php meta.function.php meta.block.php
    //   blacklist:
    //     comment
    //     constant.other.class
    //     entity
    //     meta.catch
    //     meta.function.arguments
    //     meta.function.parameters
    //     meta.use
    //     string
    //     support.class
    //     variable.other
    //     variable.parameter
    //     meta.function.return-type

    "scope": "source.php - comment - constant.other.class - entity - meta.catch - meta.class - meta.function.arguments - meta.function.parameters - meta.use - string - support.class - variable.other - variable.parameter - meta.function.return-type, source.php meta.class.php meta.block.php meta.function.php meta.block.php - comment - constant.other.class - entity - meta.catch - meta.function.arguments - meta.function.parameters - meta.use - string - support.class - variable.other - variable.parameter - meta.function.return-type",
    "completions": [
        {"trigger":"create_function","contents":"create_function(${1:args}, ${2:code})"},
        {"trigger":"fgetss","contents":"fgetss(${1:fp}${2:, ${3:length}${4:, ${5:allowable_tags}}})"},
        {"trigger":"gzgetss","contents":"gzgetss(${1:fp}${2:, ${3:length}${4:, ${5:allowable_tags}}})"},
        {"trigger":"image2wbmp","contents":"image2wbmp(${1:im}${2:, ${3:filename}${4:, ${5:foreground}}})"},
        {"trigger":"jpeg2wbmp","contents":"jpeg2wbmp(${1:f_org}, ${2:f_dest}, ${3:d_height}, ${4:d_width}, ${5:d_threshold})"},
        {"trigger":"mbereg","contents":"mbereg(${1:pattern}, ${2:string}${3:, ${4:&registers}})"},
        {"trigger":"mbereg_match","contents":"mbereg_match(${1:pattern}, ${2:string}${3:, ${4:option}})"},
        {"trigger":"mbereg_replace","contents":"mbereg_replace(${1:pattern}, ${2:replacement}, ${3:string}${4:, ${5:option}})"},
        {"trigger":"mbereg_search","contents":"mbereg_search(${1:pattern}${2:, ${3:option}})"},
        {"trigger":"mbereg_search_getpos","contents":"mbereg_search_getpos()"},
        {"trigger":"mbereg_search_getregs","contents":"mbereg_search_getregs()"},
        {"trigger":"mbereg_search_init","contents":"mbereg_search_init(${1:string}${2:, ${3:pattern}${4:, ${5:option}}})"},
        {"trigger":"mbereg_search_pos","contents":"mbereg_search_pos(${1:pattern}${2:, ${3:option}})"},
        {"trigger":"mbereg_search_regs","contents":"mbereg_search_regs(${1:pattern}${2:, ${3:option}})"},
        {"trigger":"mbereg_search_setpos","contents":"mbereg_search_setpos(${1:position})"},
        {"trigger":"mberegi","contents":"mberegi(${1:pattern}, ${2:string}${3:, ${4:&registers}})"},
        {"trigger":"mberegi_replace","contents":"mberegi_replace(${1:pattern}, ${2:replacement}, ${3:string}${4:, ${5:option}})"},
        {"trigger":"mbregex_encoding","contents":"mbregex_encoding(${1:encoding})"},
        {"trigger":"mbsplit","contents":"mbsplit(${1:pattern}, ${2:string}${3:, ${4:limit}})"},
        {"trigger":"png2wbmp","contents":"png2wbmp(${1:f_org}, ${2:f_dest}, ${3:d_height}, ${4:d_width}, ${5:d_threshold})"},
        {"trigger":"read_exif_data","contents":"read_exif_data(${1:filename}${2:, ${3:sections_needed}${4:, ${5:sub_arrays}${6:, ${7:read_thumbnail}}}})"}
    ]
}
