{
    // scope:
    //
    // source.php
    //   blacklist:
    //     comment
    //     constant.other.class
    //     entity.name
    //     meta.catch
    //     meta.class
    //     meta.function.arguments
    //     meta.use
    //     string
    //     variable.other
    //     variable.parameter
    // source.php meta.class.php meta.block.php
    //   blacklist:
    //     comment
    //     constant.other.class
    //     entity.name
    //     meta.catch
    //     meta.function.arguments
    //     meta.function.parameters
    //     meta.use
    //     string
    //     variable.other
    //     variable.parameter
    //     meta.function.return-type

    "scope": "source.php - comment - constant.other.class - entity.name - meta.catch - meta.class - meta.function.arguments - meta.use - string - variable.other - variable.parameter, source.php meta.class.php meta.block.php - comment - constant.other.class - entity.name - meta.catch - meta.function.arguments - meta.function.parameters - meta.use - string - variable.other - variable.parameter - meta.function.return-type",
    "completions": [
        {"trigger":"__halt_compiler","contents":"__halt_compiler(${1})"},
        {"trigger":"abstract","contents":"abstract "},
        {"trigger":"and","contents":"and "},
        {"trigger":"array","contents":"array(${1})"},
        {"trigger":"as","contents":"as "},
        "break",
        {"trigger":"callable","contents":"callable "},
        {"trigger":"case","contents":"case '${1}':"},
        {"trigger":"catch","contents":"catch (${1})"},
        {"trigger":"class","contents":"class "},
        {"trigger":"clone","contents":"clone "},
        {"trigger":"const","contents":"const "},
        "continue",
        {"trigger":"declare","contents":"declare(${1})"},
        {"trigger":"default","contents":"default:"},
        {"trigger":"die","contents":"die(${1})"},
        {"trigger":"do","contents":"do "},
        {"trigger":"echo","contents":"echo "},
        {"trigger":"else","contents":"else "},
        {"trigger":"elseif","contents":"elseif (${1})"},
        {"trigger":"empty","contents":"empty(${1})"},
        {"trigger":"enddeclare","contents":"enddeclare;"},
        {"trigger":"endfor","contents":"endfor;"},
        {"trigger":"endforeach","contents":"endforeach;"},
        {"trigger":"endif","contents":"endif;"},
        {"trigger":"endswitch","contents":"endswitch;"},
        {"trigger":"endwhile","contents":"endwhile;"},
        {"trigger":"eval","contents":"eval(${1})"},
        {"trigger":"exit","contents":"exit(${1})"},
        {"trigger":"extends","contents":"extends "},
        {"trigger":"final","contents":"final "},
        {"trigger":"finally","contents":"finally {\n\t${1}\n}"},
        {"trigger":"for","contents":"for (${1})"},
        {"trigger":"foreach","contents":"foreach (${1})"},
        {"trigger":"function","contents":"function "},
        {"trigger":"global","contents":"global "},
        {"trigger":"goto","contents":"goto "},
        {"trigger":"if","contents":"if (${1})"},
        {"trigger":"implements","contents":"implements "},
        {"trigger":"include","contents":"include '${1}';"},
        {"trigger":"include_once","contents":"include_once '${1}';"},
        {"trigger":"instanceof","contents":"instanceof "},
        {"trigger":"insteadof","contents":"insteadof "},
        {"trigger":"interface","contents":"interface "},
        {"trigger":"isset","contents":"isset(${1})"},
        {"trigger":"list","contents":"list(${1})"},
        {"trigger":"namespace","contents":"namespace "},
        {"trigger":"new","contents":"new "},
        {"trigger":"or","contents":"or "},
        {"trigger":"print","contents":"print "},
        {"trigger":"private","contents":"private "},
        {"trigger":"protected","contents":"protected "},
        {"trigger":"public","contents":"public "},
        {"trigger":"require","contents":"require '${1}';"},
        {"trigger":"require_once","contents":"require_once '${1}';"},
        {"trigger":"return","contents":"return "},
        {"trigger":"static","contents":"static "},
        {"trigger":"switch","contents":"switch (${1})"},
        {"trigger":"throw","contents":"throw "},
        {"trigger":"trait","contents":"trait "},
        {"trigger":"try","contents":"try {\n\t${1}\n}"},
        {"trigger":"unset","contents":"unset(${1})"},
        {"trigger":"use","contents":"use "},
        {"trigger":"var","contents":"var "},
        {"trigger":"while","contents":"while (${1})"},
        {"trigger":"xor","contents":"xor "},
        {"trigger":"yield","contents":"yield "}
    ]
}
